{"ast":null,"code":"import _defineProperty from\"/home/webmaster/front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/home/webmaster/front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _regeneratorRuntime from\"/home/webmaster/front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _slicedToArray from\"/home/webmaster/front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";var _handleActions;var _marked=/*#__PURE__*/_regeneratorRuntime.mark(authSaga);import{createAction,handleActions}from\"redux-actions\";import produce from\"immer\";import{takeLatest}from\"redux-saga/effects\";import createRequestSaga,{createRequestActionTypes}from\"../../lib/createRequestSaga\";import*as authAPI from\"../../lib/api/auth\";//================================================\nvar CHANGE_FIELD=\"auth/CHANGE_FIELD\";var INITIALIZE_FORM=\"auth/INITIALIZE_FORM\";var PASSWORD_VERIFY_ERROR=\"auth/REGISTER_PASSWORD_VERIFY_ERROR\";var _createRequestActionT=createRequestActionTypes(\"auth/LOGIN\"),_createRequestActionT2=_slicedToArray(_createRequestActionT,3),LOGIN=_createRequestActionT2[0],LOGIN_SUCCESS=_createRequestActionT2[1],LOGIN_FAILURE=_createRequestActionT2[2];var _createRequestActionT3=createRequestActionTypes(\"auth/REGITSER\"),_createRequestActionT4=_slicedToArray(_createRequestActionT3,3),REGISTER=_createRequestActionT4[0],REGISTER_SUCCESS=_createRequestActionT4[1],REGISTER_FAILURE=_createRequestActionT4[2];//================================================\n// 액션\nexport var changeField=createAction(CHANGE_FIELD,function(_ref){var form=_ref.form,key=_ref.key,value=_ref.value;return{form:form,// register , login\nkey:key,// username, password, passwordConfirm\nvalue:value// 실제 바꾸려는 값\n};});export var passwordVerifyError=createAction(PASSWORD_VERIFY_ERROR,function(error){return error;});export var initializeForm=createAction(INITIALIZE_FORM,function(form){return form;});export var userLogin=createAction(LOGIN,function(_ref2){var userid=_ref2.userid,password=_ref2.password;return{userid:userid,password:password};});export var userRegister=createAction(REGISTER,function(_ref3){var userid=_ref3.userid,password=_ref3.password,name=_ref3.name;return{userid:userid,password:password,name:name};});//================================================»\n// saga 생성\nvar userLoginSaga=createRequestSaga(LOGIN,authAPI.userLogin);var userRegisterSaga=createRequestSaga(REGISTER,authAPI.userRegister);export function authSaga(){return _regeneratorRuntime.wrap(function authSaga$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return takeLatest(LOGIN,userLoginSaga);case 2:_context.next=4;return takeLatest(REGISTER,userRegisterSaga);case 4:case\"end\":return _context.stop();}}},_marked);}//================================================\n// 초기화\nexport var initialState={login:{userid:\"\",password:\"\"},register:{userid:\"\",password:\"\",password_check:\"\",name:\"\",result:null},token:null,refreshToken:null,error:{type:null,description:null},user:null};//================================================\nvar auth=handleActions((_handleActions={},_defineProperty(_handleActions,CHANGE_FIELD,function(state,_ref4){var _ref4$payload=_ref4.payload,form=_ref4$payload.form,key=_ref4$payload.key,value=_ref4$payload.value;return produce(state,function(draft){draft[form][key]=value;});}),_defineProperty(_handleActions,INITIALIZE_FORM,function(state,_ref5){var _objectSpread2;var form=_ref5.payload;return _objectSpread({},state,(_objectSpread2={},_defineProperty(_objectSpread2,form,initialState[form]),_defineProperty(_objectSpread2,\"error\",initialState.error),_objectSpread2));}),_defineProperty(_handleActions,PASSWORD_VERIFY_ERROR,function(state,_ref6){var error=_ref6.payload;return _objectSpread({},state,{error:{type:\"register\",description:error}});}),_defineProperty(_handleActions,LOGIN_SUCCESS,function(state,_ref7){var data=_ref7.payload;return _objectSpread({},state,{error:initialState.error,token:data.access,refresh:data.refresh// refreshToken: data.refreshToken\n});}),_defineProperty(_handleActions,LOGIN_FAILURE,function(state,_ref8){var error=_ref8.payload;return _objectSpread({},state,{error:{type:\"login\",description:error}});}),_defineProperty(_handleActions,REGISTER_SUCCESS,function(state,_ref9){var result=_ref9.payload;return _objectSpread({},state,{error:initialState.error,register:{result:result}});}),_defineProperty(_handleActions,REGISTER_FAILURE,function(state,_ref10){var error=_ref10.payload;return _objectSpread({},state,{error:{type:\"register\",description:error},register:initialState.register});}),_handleActions),initialState);export default auth;","map":{"version":3,"sources":["/home/webmaster/front/src/store/modules/auth.js"],"names":["authSaga","createAction","handleActions","produce","takeLatest","createRequestSaga","createRequestActionTypes","authAPI","CHANGE_FIELD","INITIALIZE_FORM","PASSWORD_VERIFY_ERROR","LOGIN","LOGIN_SUCCESS","LOGIN_FAILURE","REGISTER","REGISTER_SUCCESS","REGISTER_FAILURE","changeField","form","key","value","passwordVerifyError","error","initializeForm","userLogin","userid","password","userRegister","name","userLoginSaga","userRegisterSaga","initialState","login","register","password_check","result","token","refreshToken","type","description","user","auth","state","payload","draft","data","access","refresh"],"mappings":"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","sourcesContent":["import { createAction, handleActions } from \"redux-actions\";\nimport produce from \"immer\";\nimport { takeLatest } from \"redux-saga/effects\";\nimport createRequestSaga, {\n  createRequestActionTypes\n} from \"../../lib/createRequestSaga\";\nimport * as authAPI from \"../../lib/api/auth\";\n\n//================================================\n\nconst CHANGE_FIELD = \"auth/CHANGE_FIELD\";\nconst INITIALIZE_FORM = \"auth/INITIALIZE_FORM\";\nconst PASSWORD_VERIFY_ERROR = \"auth/REGISTER_PASSWORD_VERIFY_ERROR\";\n\nconst [LOGIN, LOGIN_SUCCESS, LOGIN_FAILURE] = createRequestActionTypes(\n  \"auth/LOGIN\"\n);\n\nconst [REGISTER, REGISTER_SUCCESS, REGISTER_FAILURE] = createRequestActionTypes(\n  \"auth/REGITSER\"\n);\n\n//================================================\n\n// 액션\nexport const changeField = createAction(\n  CHANGE_FIELD,\n  ({ form, key, value }) => ({\n    form, // register , login\n    key, // username, password, passwordConfirm\n    value // 실제 바꾸려는 값\n  })\n);\n\nexport const passwordVerifyError = createAction(\n  PASSWORD_VERIFY_ERROR,\n  error => error\n);\n\nexport const initializeForm = createAction(INITIALIZE_FORM, form => form);\n\nexport const userLogin = createAction(LOGIN, ({ userid, password }) => ({\n  userid,\n  password\n}));\n\nexport const userRegister = createAction(\n  REGISTER,\n  ({ userid, password, name }) => ({\n    userid,\n    password,\n    name\n  })\n);\n\n//================================================»\n\n// saga 생성\nconst userLoginSaga = createRequestSaga(LOGIN, authAPI.userLogin);\nconst userRegisterSaga = createRequestSaga(REGISTER, authAPI.userRegister);\n\nexport function* authSaga() {\n  yield takeLatest(LOGIN, userLoginSaga);\n  yield takeLatest(REGISTER, userRegisterSaga);\n}\n\n//================================================\n\n// 초기화\nexport const initialState = {\n  login: {\n    userid: \"\",\n    password: \"\"\n  },\n  register: {\n    userid: \"\",\n    password: \"\",\n    password_check: \"\",\n    name: \"\",\n    result: null\n  },\n  token: null,\n  refreshToken: null,\n  error: {\n    type: null,\n    description: null\n  },\n  user: null\n};\n\n//================================================\n\nconst auth = handleActions(\n  {\n    [CHANGE_FIELD]: (state, { payload: { form, key, value } }) =>\n      produce(state, draft => {\n        draft[form][key] = value;\n      }),\n    [INITIALIZE_FORM]: (state, { payload: form }) => ({\n      ...state,\n      [form]: initialState[form],\n      error: initialState.error\n    }),\n    [PASSWORD_VERIFY_ERROR]: (state, { payload: error }) => ({\n      ...state,\n      error: { type: \"register\", description: error }\n    }),\n    [LOGIN_SUCCESS]: (state, { payload: data }) => ({\n      ...state,\n      error: initialState.error,\n      token: data.access,\n      refresh: data.refresh\n      // refreshToken: data.refreshToken\n    }),\n    [LOGIN_FAILURE]: (state, { payload: error }) => ({\n      ...state,\n      error: { type: \"login\", description: error }\n    }),\n    [REGISTER_SUCCESS]: (state, { payload: result }) => ({\n      ...state,\n      error: initialState.error,\n      register: { result: result }\n    }),\n    [REGISTER_FAILURE]: (state, { payload: error }) => ({\n      ...state,\n      error: { type: \"register\", description: error },\n      register: initialState.register\n    })\n  },\n  initialState\n);\n\nexport default auth;\n"]},"metadata":{},"sourceType":"module"}