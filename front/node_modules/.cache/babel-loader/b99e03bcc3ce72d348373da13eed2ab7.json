{"ast":null,"code":"import _regeneratorRuntime from\"/home/webmaster/front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/webmaster/front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/webmaster/front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from\"react\";import{useSelector,useDispatch}from\"react-redux\";import{getTICInfo,getStreamInfo}from\"../../store/modules/video\";import RecordInfo from\"../../components/Record/RecordInfo\";var _window=window,kakao=_window.kakao;var SubNavContents=[{title:\"열화상 녹화 영상\",description:\"녹화된 영화상 영상을 확인하실 수 있습니다.\",color:\"red\"},{title:\"일반 녹화 영상\",description:\"녹화된 일반 영상을 확인하실 수 있습니다.\",color:\"green\"}];function InfoContainer(_ref){var onStream=_ref.onStream;var videoInfo=useSelector(function(state){return state.video.video;});var dispatch=useDispatch();var error=useSelector(function(state){return state.stream.error;});var ticLoading=useSelector(function(state){return state.loading[\"video/GET_TIC_INFO\"];});var streamLoading=useSelector(function(state){return state.loading[\"video/GET_STREAM_INFO\"];});var _useState=useState(true),_useState2=_slicedToArray(_useState,2),isTic=_useState2[0],setIsTic=_useState2[1];useEffect(function(){if(error.type!==\"\"&&!videoInfo){if(isTic===true){dispatch(getTICInfo());}else{dispatch(getStreamInfo());}}},[dispatch,error.type,isTic,videoInfo]);var onRefresh=function onRefresh(e){e.preventDefault();if(isTic===true){dispatch(getTICInfo());}else{dispatch(getStreamInfo());}};var onChangeViedoType=function onChangeViedoType(e){e.preventDefault();if(isTic===false){dispatch(getTICInfo());}else{dispatch(getStreamInfo());}setIsTic(!isTic);};var geocoder=new kakao.maps.services.Geocoder();function searchAddrFromCoords(_x){return _searchAddrFromCoords.apply(this,arguments);}function _searchAddrFromCoords(){_searchAddrFromCoords=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(coords){var result;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!(!coords||!coords.cordinateX||!coords.cordinateY)){_context.next=2;break;}return _context.abrupt(\"return\",\"X1\");case 2:_context.next=4;return geocoder.coord2RegionCode(coords.cordinateX,coords.cordinateY);case 4:result=_context.sent;if(!result){_context.next=9;break;}return _context.abrupt(\"return\",2);case 9:return _context.abrupt(\"return\",1);case 10:case\"end\":return _context.stop();}}},_callee);}));return _searchAddrFromCoords.apply(this,arguments);}return/*#__PURE__*/React.createElement(RecordInfo,{info:videoInfo,loading:ticLoading||streamLoading,onRefresh:onRefresh,onStream:onStream,onChangeViedoType:onChangeViedoType,searchAddrFromCoords:searchAddrFromCoords,SubNavContents:isTic?SubNavContents[0]:SubNavContents[1],isTi:isTic},\"InfoContainer\");}export default InfoContainer;","map":{"version":3,"sources":["/home/webmaster/front/src/containers/Record/InfoContainer.js"],"names":["React","useEffect","useState","useSelector","useDispatch","getTICInfo","getStreamInfo","RecordInfo","window","kakao","SubNavContents","title","description","color","InfoContainer","onStream","videoInfo","state","video","dispatch","error","stream","ticLoading","loading","streamLoading","isTic","setIsTic","type","onRefresh","e","preventDefault","onChangeViedoType","geocoder","maps","services","Geocoder","searchAddrFromCoords","coords","cordinateX","cordinateY","coord2RegionCode","result"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getTICInfo, getStreamInfo } from \"../../store/modules/video\";\nimport RecordInfo from \"../../components/Record/RecordInfo\";\nconst { kakao } = window;\n\nconst SubNavContents = [\n  {\n    title: \"열화상 녹화 영상\",\n    description: \"녹화된 영화상 영상을 확인하실 수 있습니다.\",\n    color: \"red\"\n  },\n  {\n    title: \"일반 녹화 영상\",\n    description: \"녹화된 일반 영상을 확인하실 수 있습니다.\",\n    color: \"green\"\n  }\n];\n\nfunction InfoContainer({ onStream }) {\n  const videoInfo = useSelector(state => state.video.video);\n  const dispatch = useDispatch();\n  const error = useSelector(state => state.stream.error);\n  const ticLoading = useSelector(state => state.loading[\"video/GET_TIC_INFO\"]);\n  const streamLoading = useSelector(\n    state => state.loading[\"video/GET_STREAM_INFO\"]\n  );\n\n  const [isTic, setIsTic] = useState(true);\n\n  useEffect(() => {\n    if (error.type !== \"\" && !videoInfo) {\n      if (isTic === true) {\n        dispatch(getTICInfo());\n      } else {\n        dispatch(getStreamInfo());\n      }\n    }\n  }, [dispatch, error.type, isTic, videoInfo]);\n\n  const onRefresh = e => {\n    e.preventDefault();\n    if (isTic === true) {\n      dispatch(getTICInfo());\n    } else {\n      dispatch(getStreamInfo());\n    }\n  };\n\n  const onChangeViedoType = e => {\n    e.preventDefault();\n    if (isTic === false) {\n      dispatch(getTICInfo());\n    } else {\n      dispatch(getStreamInfo());\n    }\n    setIsTic(!isTic);\n  };\n\n  let geocoder = new kakao.maps.services.Geocoder();\n\n  async function searchAddrFromCoords(coords) {\n    if (!coords || !coords.cordinateX || !coords.cordinateY) {\n      return \"X1\";\n    }\n    const result = await geocoder.coord2RegionCode(\n      coords.cordinateX,\n      coords.cordinateY\n    );\n    if (result) {\n      return 2;\n    } else {\n      return 1;\n    }\n  }\n\n  return (\n    <RecordInfo\n      info={videoInfo}\n      loading={ticLoading || streamLoading}\n      onRefresh={onRefresh}\n      onStream={onStream}\n      onChangeViedoType={onChangeViedoType}\n      searchAddrFromCoords={searchAddrFromCoords}\n      SubNavContents={isTic ? SubNavContents[0] : SubNavContents[1]}\n      isTi={isTic}\n    >\n      InfoContainer\n    </RecordInfo>\n  );\n}\n\nexport default InfoContainer;\n"]},"metadata":{},"sourceType":"module"}