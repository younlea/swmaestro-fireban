{"ast":null,"code":"import{ACCESS_TOKEN,REFRESH_TOKEN}from\"./config\";// import { check } from \"../store/modules/user\";\n// const token = localStorage.getItem(ACCESS_TOKEN);\nvar authMiddleware=function authMiddleware(store){return function(next){return function(action){console.log(action.type);if(action.type===\"auth/LOGIN_SUCCESS\"){// localStorage.setItem(\"accessToken\", action.payload);\ntry{localStorage.setItem(ACCESS_TOKEN,action.payload.access);localStorage.setItem(REFRESH_TOKEN,action.payload.refresh);}catch(e){}}if(action.type===\"user/GET_USER_INFO_SUCCESS\"){try{localStorage.setItem(\"user\",JSON.stringify(action.payload));}catch(e){}}window.addEventListener(\"storage\",function(e){return console.log(\"event\",e);});// if (action.type === \"tmp/ADD_TMP_SUCCESS\") {\n//     store.dispatch(getUserInfo());\n// }\n// if (action.type === \"tmp/DEL_TMP_SUCCESS\") {\n//     store.dispatch(getUserInfo());\n// }\nvar result=next(action);return result;};};};export default authMiddleware;","map":{"version":3,"sources":["/home/webmaster/front/src/lib/authMiddleware.js"],"names":["ACCESS_TOKEN","REFRESH_TOKEN","authMiddleware","store","next","action","console","log","type","localStorage","setItem","payload","access","refresh","e","JSON","stringify","window","addEventListener","result"],"mappings":"AAAA,OAASA,YAAT,CAAuBC,aAAvB,KAA4C,UAA5C,CACA;AAEA;AAEA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAAAC,KAAK,QAAI,UAAAC,IAAI,QAAI,UAAAC,MAAM,CAAI,CAChDC,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACG,IAAnB,EACA,GAAIH,MAAM,CAACG,IAAP,GAAgB,oBAApB,CAA0C,CACxC;AACA,GAAI,CACFC,YAAY,CAACC,OAAb,CAAqBV,YAArB,CAAmCK,MAAM,CAACM,OAAP,CAAeC,MAAlD,EACAH,YAAY,CAACC,OAAb,CAAqBT,aAArB,CAAoCI,MAAM,CAACM,OAAP,CAAeE,OAAnD,EACD,CAAC,MAAOC,CAAP,CAAU,CAAE,CACf,CAED,GAAIT,MAAM,CAACG,IAAP,GAAgB,4BAApB,CAAkD,CAChD,GAAI,CACFC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAA6BK,IAAI,CAACC,SAAL,CAAeX,MAAM,CAACM,OAAtB,CAA7B,EACD,CAAC,MAAOG,CAAP,CAAU,CAAE,CACf,CAEDG,MAAM,CAACC,gBAAP,CAAwB,SAAxB,CAAmC,SAAAJ,CAAC,QAAIR,CAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,CAAqBO,CAArB,CAAJ,EAApC,EACA;AACA;AACA;AACA;AACA;AACA;AAEA,GAAMK,CAAAA,MAAM,CAAGf,IAAI,CAACC,MAAD,CAAnB,CAEA,MAAOc,CAAAA,MAAP,CACD,CA3BmC,EAAR,EAA5B,CA6BA,cAAejB,CAAAA,cAAf","sourcesContent":["import { ACCESS_TOKEN, REFRESH_TOKEN } from \"./config\";\n// import { check } from \"../store/modules/user\";\n\n// const token = localStorage.getItem(ACCESS_TOKEN);\n\nconst authMiddleware = store => next => action => {\n  console.log(action.type);\n  if (action.type === \"auth/LOGIN_SUCCESS\") {\n    // localStorage.setItem(\"accessToken\", action.payload);\n    try {\n      localStorage.setItem(ACCESS_TOKEN, action.payload.access);\n      localStorage.setItem(REFRESH_TOKEN, action.payload.refresh);\n    } catch (e) {}\n  }\n\n  if (action.type === \"user/GET_USER_INFO_SUCCESS\") {\n    try {\n      localStorage.setItem(\"user\", JSON.stringify(action.payload));\n    } catch (e) {}\n  }\n\n  window.addEventListener(\"storage\", e => console.log(\"event\", e));\n  // if (action.type === \"tmp/ADD_TMP_SUCCESS\") {\n  //     store.dispatch(getUserInfo());\n  // }\n  // if (action.type === \"tmp/DEL_TMP_SUCCESS\") {\n  //     store.dispatch(getUserInfo());\n  // }\n\n  const result = next(action);\n\n  return result;\n};\n\nexport default authMiddleware;\n"]},"metadata":{},"sourceType":"module"}