{"ast":null,"code":"import axios from\"axios\";import{API_END_POINT,ACCESS_TOKEN,REFRESH_TOKEN}from\"../config\";import https from\"https\";export var client=axios.create({baseURL:API_END_POINT,timeout:180000,withCredentials:false,responseType:\"json\",httpsAgent:new https.Agent({rejectUnauthorized:false}),headers:{\"Content-Type\":\"application/json\"}});export var refreshClient=axios.create({baseURL:API_END_POINT,timeout:180000,withCredentials:false,headers:{\"Content-Type\":\"application/json\",Authorization:\"Bearer \".concat(localStorage.getItem(REFRESH_TOKEN))}});export var accessClient=axios.create({baseURL:API_END_POINT,timeout:180000,withCredentials:false,headers:{\"Content-Type\":\"application/json\",Authorization:\"Bearer \".concat(localStorage.getItem(ACCESS_TOKEN))}});accessClient.interceptors.request.use(function(config){var token=localStorage.getItem(ACCESS_TOKEN);config.headers.Authorization=\"Bearer \"+token;return config;});accessClient.interceptors.response.use(function(response){return response;},function(err){return new Promise(function(resolve,reject){var originalReq=err.config;if(err.response.status===401&&err.config&&!err.config.__isRetryRequest){originalReq._retry=true;var res=fetch(API_END_POINT+\"/auth/refresh\",{method:\"POST\",mode:\"cors\",cache:\"no-cache\",credentials:\"same-origin\",headers:{\"Content-Type\":\"application/json\",Authorization:\"Bearer \"+localStorage.getItem(ACCESS_TOKEN)},redirect:\"follow\",referrer:\"no-referrer\",body:JSON.stringify({refresh:localStorage.getItem(REFRESH_TOKEN)})}).then(function(res){return res.json();}).then(function(res){localStorage.setItem(ACCESS_TOKEN,res.access);originalReq.headers[\"Authorization\"]=\"Bearer \"+res.access;return axios(originalReq);});resolve(res);}return reject(err);});});","map":{"version":3,"sources":["/home/webmaster/front/src/lib/api/client.js"],"names":["axios","API_END_POINT","ACCESS_TOKEN","REFRESH_TOKEN","https","client","create","baseURL","timeout","withCredentials","responseType","httpsAgent","Agent","rejectUnauthorized","headers","refreshClient","Authorization","localStorage","getItem","accessClient","interceptors","request","use","config","token","response","err","Promise","resolve","reject","originalReq","status","__isRetryRequest","_retry","res","fetch","method","mode","cache","credentials","redirect","referrer","body","JSON","stringify","refresh","then","json","setItem","access"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { API_END_POINT, ACCESS_TOKEN, REFRESH_TOKEN } from \"../config\";\nimport https from \"https\";\n\nexport const client = axios.create({\n  baseURL: API_END_POINT,\n  timeout: 180000,\n  withCredentials: false,\n\n  responseType: \"json\",\n  httpsAgent: new https.Agent({ rejectUnauthorized: false }),\n\n  headers: {\n    \"Content-Type\": \"application/json\"\n  }\n});\n\nexport const refreshClient = axios.create({\n  baseURL: API_END_POINT,\n  timeout: 180000,\n  withCredentials: false,\n  headers: {\n    \"Content-Type\": \"application/json\",\n    Authorization: `Bearer ${localStorage.getItem(REFRESH_TOKEN)}`\n  }\n});\n\nexport const accessClient = axios.create({\n  baseURL: API_END_POINT,\n  timeout: 180000,\n  withCredentials: false,\n  headers: {\n    \"Content-Type\": \"application/json\",\n    Authorization: `Bearer ${localStorage.getItem(ACCESS_TOKEN)}`\n  }\n});\n\naccessClient.interceptors.request.use(function (config) {\n  const token = localStorage.getItem(ACCESS_TOKEN);\n  config.headers.Authorization = \"Bearer \" + token;\n\n  return config;\n});\n\naccessClient.interceptors.response.use(\n  response => {\n    return response;\n  },\n  err => {\n    return new Promise((resolve, reject) => {\n      const originalReq = err.config;\n      if (\n        err.response.status === 401 &&\n        err.config &&\n        !err.config.__isRetryRequest\n      ) {\n        originalReq._retry = true;\n\n        let res = fetch(API_END_POINT + \"/auth/refresh\", {\n          method: \"POST\",\n          mode: \"cors\",\n          cache: \"no-cache\",\n          credentials: \"same-origin\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: \"Bearer \" + localStorage.getItem(ACCESS_TOKEN)\n          },\n          redirect: \"follow\",\n          referrer: \"no-referrer\",\n          body: JSON.stringify({\n            refresh: localStorage.getItem(REFRESH_TOKEN)\n          })\n        })\n          .then(res => res.json())\n          .then(res => {\n            localStorage.setItem(ACCESS_TOKEN, res.access);\n            originalReq.headers[\"Authorization\"] = \"Bearer \" + res.access;\n\n            return axios(originalReq);\n          });\n\n        resolve(res);\n      }\n\n      return reject(err);\n    });\n  }\n);\n"]},"metadata":{},"sourceType":"module"}