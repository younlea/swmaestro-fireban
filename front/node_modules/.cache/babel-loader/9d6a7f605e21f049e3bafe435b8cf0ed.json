{"ast":null,"code":"import _regeneratorRuntime from\"/home/webmaster/front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/webmaster/front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import React,{useCallback,useEffect}from\"react\";import{useSelector,useDispatch}from\"react-redux\";import{getTICInfo,getStreamInfo,getTICInfoMore,getStreamInfoMore,changeTic}from\"../../store/modules/video\";import RecordInfo from\"../../components/Record/RecordInfo\";import{useHistory}from\"react-router-dom\";var _window=window,kakao=_window.kakao;var SubNavContents=[{title:\"열화상 녹화 영상\",description:\"녹화된 영화상 영상을 확인하실 수 있습니다.\",color:\"red\"},{title:\"일반 녹화 영상\",description:\"녹화된 일반 영상을 확인하실 수 있습니다.\",color:\"green\"}];function InfoContainer(){var videoInfo=useSelector(function(state){return state.video.video;});var page=useSelector(function(state){return state.video.page;});var dispatch=useDispatch();var error=useSelector(function(state){return state.stream.error;});var ticLoading=useSelector(function(state){return state.loading[\"video/GET_TIC_INFO\"];});var streamLoading=useSelector(function(state){return state.loading[\"video/GET_STREAM_INFO\"];});var isTic=useSelector(function(state){return state.video.isTic;});var history=useHistory();useEffect(function(){if(error.type!==\"\"&&!videoInfo){if(isTic===true){dispatch(getTICInfo(1));}else{dispatch(getStreamInfo(1));}}},[dispatch,error.type,isTic,videoInfo]);var onStream=useCallback(/*#__PURE__*/ //submit\nfunction(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(e){var target;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:e.preventDefault();try{target=e.currentTarget.dataset.index;if(isTic===true){history.push(\"/video/tic/\"+target);}else{history.push(\"/video/stream/\"+target);}}catch(e){alert(\"잠시 후 다시 시도해주세요.\");}case 2:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}(),[history,isTic]);var onRefresh=function onRefresh(e){e.preventDefault();if(isTic===true){dispatch(getTICInfo(1));}else{dispatch(getStreamInfo(1));}};var onRecordMore=function onRecordMore(e){e.preventDefault();if(isTic===true){dispatch(getTICInfoMore(Number(page)+1));}else{dispatch(getStreamInfoMore(Number(page)+1));}};var onChangeViedoType=function onChangeViedoType(e){e.preventDefault();if(isTic===false){dispatch(getTICInfo());}else{dispatch(getStreamInfo());}dispatch(changeTic());};var geocoder=new kakao.maps.services.Geocoder();function searchAddrFromCoords(_x2){return _searchAddrFromCoords.apply(this,arguments);}function _searchAddrFromCoords(){_searchAddrFromCoords=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(coords){var result;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:if(!(!coords||!coords.cordinateX||!coords.cordinateY)){_context2.next=2;break;}return _context2.abrupt(\"return\",\"X1\");case 2:_context2.next=4;return geocoder.coord2RegionCode(coords.cordinateX,coords.cordinateY);case 4:result=_context2.sent;if(!result){_context2.next=9;break;}return _context2.abrupt(\"return\",2);case 9:return _context2.abrupt(\"return\",1);case 10:case\"end\":return _context2.stop();}}},_callee2);}));return _searchAddrFromCoords.apply(this,arguments);}return/*#__PURE__*/React.createElement(RecordInfo,{info:videoInfo,loading:ticLoading||streamLoading,onRefresh:onRefresh,onStream:onStream,onChangeViedoType:onChangeViedoType,searchAddrFromCoords:searchAddrFromCoords,SubNavContents:isTic?SubNavContents[0]:SubNavContents[1],isTic:isTic,onRecordMore:onRecordMore},\"InfoContainer\");}export default InfoContainer;","map":{"version":3,"sources":["/home/webmaster/front/src/containers/Record/InfoContainer.js"],"names":["React","useCallback","useEffect","useSelector","useDispatch","getTICInfo","getStreamInfo","getTICInfoMore","getStreamInfoMore","changeTic","RecordInfo","useHistory","window","kakao","SubNavContents","title","description","color","InfoContainer","videoInfo","state","video","page","dispatch","error","stream","ticLoading","loading","streamLoading","isTic","history","type","onStream","e","preventDefault","target","currentTarget","dataset","index","push","alert","onRefresh","onRecordMore","Number","onChangeViedoType","geocoder","maps","services","Geocoder","searchAddrFromCoords","coords","cordinateX","cordinateY","coord2RegionCode","result"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getTICInfo, getStreamInfo, getTICInfoMore, getStreamInfoMore, changeTic } from \"../../store/modules/video\";\nimport RecordInfo from \"../../components/Record/RecordInfo\";\nimport { useHistory } from \"react-router-dom\";\nconst { kakao } = window;\n\nconst SubNavContents = [\n  {\n    title: \"열화상 녹화 영상\",\n    description: \"녹화된 영화상 영상을 확인하실 수 있습니다.\",\n    color: \"red\"\n  },\n  {\n    title: \"일반 녹화 영상\",\n    description: \"녹화된 일반 영상을 확인하실 수 있습니다.\",\n    color: \"green\"\n  }\n];\n\nfunction InfoContainer() {\n  const videoInfo = useSelector(state => state.video.video);\n  const page = useSelector(state => state.video.page)\n  const dispatch = useDispatch();\n  const error = useSelector(state => state.stream.error);\n  const ticLoading = useSelector(state => state.loading[\"video/GET_TIC_INFO\"]);\n  const streamLoading = useSelector(\n    state => state.loading[\"video/GET_STREAM_INFO\"]\n  );\n\n  const isTic = useSelector(state => state.video.isTic)\n\n  \n  const history = useHistory();\n\n  useEffect(() => {\n    if (error.type !== \"\" && !videoInfo) {\n      if (isTic === true) {\n        dispatch(getTICInfo(1));\n      } else {\n        dispatch(getStreamInfo(1));\n      }\n    }\n  }, [dispatch, error.type, isTic, videoInfo]);\n\n  const onStream = useCallback(\n    //submit\n    async e => {\n      e.preventDefault();\n      try {\n        const target = e.currentTarget.dataset.index;\n        if (isTic === true) {\n          history.push(\"/video/tic/\" + target);\n        } else {\n          history.push(\"/video/stream/\" + target);\n        }\n      } catch (e) {\n        alert(\"잠시 후 다시 시도해주세요.\");\n      }\n    },\n    [history, isTic]\n  );\n\n  const onRefresh = e => {\n    e.preventDefault();\n    if (isTic === true) {\n      dispatch(getTICInfo(1));\n    } else {\n      dispatch(getStreamInfo(1));\n    }\n  };\n\n\n  const onRecordMore = e => {\n    e.preventDefault();\n    if (isTic === true) {\n      dispatch(getTICInfoMore(Number(page)+1));\n    } else {\n      dispatch(getStreamInfoMore(Number(page)+1));\n    }\n  };\n\n  const onChangeViedoType = e => {\n    e.preventDefault();\n    if (isTic === false) {\n      dispatch(getTICInfo());\n    } else {\n      dispatch(getStreamInfo());\n    }\n    dispatch(changeTic());\n    \n  };\n\n  let geocoder = new kakao.maps.services.Geocoder();\n\n  async function searchAddrFromCoords(coords) {\n    if (!coords || !coords.cordinateX || !coords.cordinateY) {\n      return \"X1\";\n    }\n    const result = await geocoder.coord2RegionCode(\n      coords.cordinateX,\n      coords.cordinateY\n    );\n    if (result) {\n      return 2;\n    } else {\n      return 1;\n    }\n  }\n\n  return (\n    <RecordInfo\n      info={videoInfo}\n      loading={ticLoading || streamLoading}\n      onRefresh={onRefresh}\n      onStream={onStream}\n      onChangeViedoType={onChangeViedoType}\n      searchAddrFromCoords={searchAddrFromCoords}\n      SubNavContents={isTic ? SubNavContents[0] : SubNavContents[1]}\n      isTic={isTic}\n      onRecordMore={onRecordMore}\n    >\n      InfoContainer\n    </RecordInfo>\n  );\n}\n\nexport default InfoContainer;\n"]},"metadata":{},"sourceType":"module"}