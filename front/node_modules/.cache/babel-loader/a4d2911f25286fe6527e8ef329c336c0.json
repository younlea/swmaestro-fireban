{"ast":null,"code":"import _defineProperty from\"/home/webmaster/front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/home/webmaster/front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _regeneratorRuntime from\"/home/webmaster/front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _slicedToArray from\"/home/webmaster/front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";var _handleActions;var _marked=/*#__PURE__*/_regeneratorRuntime.mark(streamSaga);import{createAction,handleActions}from\"redux-actions\";import{takeLatest}from\"redux-saga/effects\";import createRequestSaga,{createRequestActionTypes}from\"../../lib/createRequestSaga\";import*as streamAPI from\"../../lib/api/stream\";//================================================\nvar _createRequestActionT=createRequestActionTypes(\"stream/GET_STREAM_INFO\"),_createRequestActionT2=_slicedToArray(_createRequestActionT,3),GET_STREAM_INFO=_createRequestActionT2[0],GET_STREAM_INFO_SUCCESS=_createRequestActionT2[1],GET_STREAM_INFO_FAILURE=_createRequestActionT2[2];//================================================\n// action\nexport var getStreamInfo=createAction(GET_STREAM_INFO);//================================================»\n// saga 생성\nvar getStreamInfoSaga=createRequestSaga(GET_STREAM_INFO,streamAPI.streamInfo);export function streamSaga(){return _regeneratorRuntime.wrap(function streamSaga$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return takeLatest(GET_STREAM_INFO,getStreamInfoSaga);case 2:case\"end\":return _context.stop();}}},_marked);}//================================================\n// 초기화\nexport var initialState={stream:null,error:{type:null,description:null}};//================================================\nvar stream=handleActions((_handleActions={},_defineProperty(_handleActions,GET_STREAM_INFO_SUCCESS,function(state,_ref){var data=_ref.payload;return _objectSpread({},state,{stream:data,error:initialState.error});}),_defineProperty(_handleActions,GET_STREAM_INFO_FAILURE,function(state,_ref2){var error=_ref2.payload;return _objectSpread({},state,{user:null,error:{type:\"streamInfo\",description:error}});}),_handleActions),initialState);export default stream;","map":{"version":3,"sources":["/home/webmaster/front/src/store/modules/stream.js"],"names":["streamSaga","createAction","handleActions","takeLatest","createRequestSaga","createRequestActionTypes","streamAPI","GET_STREAM_INFO","GET_STREAM_INFO_SUCCESS","GET_STREAM_INFO_FAILURE","getStreamInfo","getStreamInfoSaga","streamInfo","initialState","stream","error","type","description","state","data","payload","user"],"mappings":"6mBA8BiBA,U,EA9BjB,OAASC,YAAT,CAAuBC,aAAvB,KAA4C,eAA5C,CACA,OAASC,UAAT,KAA2B,oBAA3B,CACA,MAAOC,CAAAA,iBAAP,EACEC,wBADF,KAEO,6BAFP,CAGA,MAAO,GAAKC,CAAAA,SAAZ,KAA2B,sBAA3B,CAEA;0BAMID,wBAAwB,CAAC,wBAAD,C,gEAH1BE,e,2BACAC,uB,2BACAC,uB,2BAGF;AAEA;AAEA,MAAO,IAAMC,CAAAA,aAAa,CAAGT,YAAY,CAACM,eAAD,CAAlC,CAEP;AAEA;AAEA,GAAMI,CAAAA,iBAAiB,CAAGP,iBAAiB,CACzCG,eADyC,CAEzCD,SAAS,CAACM,UAF+B,CAA3C,CAKA,MAAO,SAAUZ,CAAAA,UAAV,sIACL,MAAMG,CAAAA,UAAU,CAACI,eAAD,CAAkBI,iBAAlB,CAAhB,CADK,sDAIP;AAEA;AACA,MAAO,IAAME,CAAAA,YAAY,CAAG,CAC1BC,MAAM,CAAE,IADkB,CAE1BC,KAAK,CAAE,CACLC,IAAI,CAAE,IADD,CAELC,WAAW,CAAE,IAFR,CAFmB,CAArB,CAQP;AAEA,GAAMH,CAAAA,MAAM,CAAGZ,aAAa,mDAEvBM,uBAFuB,CAEG,SAACU,KAAD,UAAmBC,CAAAA,IAAnB,MAAUC,OAAV,yBACtBF,KADsB,EAEzBJ,MAAM,CAAEK,IAFiB,CAGzBJ,KAAK,CAAEF,YAAY,CAACE,KAHK,IAFH,iCAOvBN,uBAPuB,CAOG,SAACS,KAAD,WAAmBH,CAAAA,KAAnB,OAAUK,OAAV,yBACtBF,KADsB,EAEzBG,IAAI,CAAE,IAFmB,CAGzBN,KAAK,CAAE,CAAEC,IAAI,CAAE,YAAR,CAAsBC,WAAW,CAAEF,KAAnC,CAHkB,IAPH,kBAa1BF,YAb0B,CAA5B,CAgBA,cAAeC,CAAAA,MAAf","sourcesContent":["import { createAction, handleActions } from \"redux-actions\";\nimport { takeLatest } from \"redux-saga/effects\";\nimport createRequestSaga, {\n  createRequestActionTypes\n} from \"../../lib/createRequestSaga\";\nimport * as streamAPI from \"../../lib/api/stream\";\n\n//================================================\n\nconst [\n  GET_STREAM_INFO,\n  GET_STREAM_INFO_SUCCESS,\n  GET_STREAM_INFO_FAILURE\n] = createRequestActionTypes(\"stream/GET_STREAM_INFO\");\n\n//================================================\n\n// action\n\nexport const getStreamInfo = createAction(GET_STREAM_INFO);\n\n//================================================»\n\n// saga 생성\n\nconst getStreamInfoSaga = createRequestSaga(\n  GET_STREAM_INFO,\n  streamAPI.streamInfo\n);\n\nexport function* streamSaga() {\n  yield takeLatest(GET_STREAM_INFO, getStreamInfoSaga);\n}\n\n//================================================\n\n// 초기화\nexport const initialState = {\n  stream: null,\n  error: {\n    type: null,\n    description: null\n  }\n};\n\n//================================================\n\nconst stream = handleActions(\n  {\n    [GET_STREAM_INFO_SUCCESS]: (state, { payload: data }) => ({\n      ...state,\n      stream: data,\n      error: initialState.error\n    }),\n    [GET_STREAM_INFO_FAILURE]: (state, { payload: error }) => ({\n      ...state,\n      user: null,\n      error: { type: \"streamInfo\", description: error }\n    })\n  },\n  initialState\n);\n\nexport default stream;\n"]},"metadata":{},"sourceType":"module"}